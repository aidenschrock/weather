{"version":3,"sources":["crypto (ignored)","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/lib/DataTracker.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { IForecastThreeHourPeriod, IOpenWeatherResponse } from 'src/models/response/IOpenWeatherResponse';\r\nimport { ISingleDayForecast } from 'src/models/ISingleDayForecast';\r\nimport { DataTracker } from 'src/lib/DataTracker';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'weather';\r\n  userInput: string;\r\n  apiKey: string;\r\n  forecastReadingsByDay: any;\r\n  dataTrackerForcasts: any;\r\n  cityName: string;\r\n\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.apiKey = \"3c4b4a4758aef4aef45036a83dcf6281\"\r\n    this.forecastReadingsByDay = [];\r\n    this.dataTrackerForcasts = [];\r\n  }\r\n\r\n  areCardsShown() {\r\n    if (this.forecastReadingsByDay != \"\") {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  getWeather() {\r\n    this.clearWeather()\r\n    if (this.userInput) {\r\n      const forecastURL = new URL('https://api.openweathermap.org/data/2.5/forecast')\r\n\r\n      var isValidZip = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.userInput)\r\n\r\n      if (isValidZip) {\r\n        forecastURL.searchParams.append(\"zip\", this.userInput)\r\n      }\r\n      else {\r\n        forecastURL.searchParams.append(\"q\", this.userInput)\r\n      }\r\n      forecastURL.searchParams.append(\"appid\", this.apiKey)\r\n      forecastURL.searchParams.append(\"units\", \"imperial\")\r\n\r\n      const forecastApiResponse = this.httpClient.get(forecastURL.toString()).pipe(\r\n        map(resp => resp)\r\n      )\r\n\r\n      forecastApiResponse.subscribe((data: IOpenWeatherResponse) => {\r\n        this.cityName = data.city.name;\r\n        const forecastsByDay = this.chunkReadingsIntoDays(data.list);\r\n        forecastsByDay.forEach(day => {\r\n          this.forecastReadingsByDay.push(day);\r\n          this.dataTrackerForcasts.push(new DataTracker(day));\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  clearWeather() {\r\n    this.cityName = \"\";\r\n    this.forecastReadingsByDay = [];\r\n    this.dataTrackerForcasts = [];\r\n  }\r\n\r\n  private chunkReadingsIntoDays(forecasts: IForecastThreeHourPeriod[]) {\r\n    const forecastReadingsByDay: ISingleDayForecast[] = []\r\n\r\n    const forecastsPerDay = 8\r\n    for (let i = 0; i < forecasts.length; i += forecastsPerDay) {\r\n      forecastReadingsByDay.push({\r\n        dayOfWeek: new Date(forecasts[i].dt * 1000).toLocaleDateString('en-US', { weekday: 'long' }),\r\n        forecasts: forecasts.slice(i, i + (forecastsPerDay - 1))\r\n      })\r\n    }\r\n\r\n    return forecastReadingsByDay\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"container\">\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"head\">\r\n    <input\r\n      (keydown.enter)=\"getWeather()\"\r\n      [(ngModel)]=\"userInput\"\r\n      placeholder=\"Enter City or Zipcode\"\r\n    />\r\n    <button\r\n      (click)=\"getWeather()\"\r\n      class=\"get-weather\"\r\n      mat-raised-button\r\n      color=\"primary\"\r\n    >\r\n      Get Weather\r\n    </button>\r\n  </div>\r\n  <div class=\"wrapper\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    <h1 class=\"city-name\">{{ cityName }}</h1>\r\n    <div *ngIf=\"areCardsShown()\" fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n      <mat-card\r\n        *ngFor=\"let forecast of forecastReadingsByDay; let i = index\"\r\n        class=\"weather-card\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <h2>{{ forecast.dayOfWeek }}</h2>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n          <img\r\n            class=\"weather-icon\"\r\n            [src]=\"\r\n              'http://openweathermap.org/img/wn/' +\r\n              forecast.forecasts[0].weather[0].icon +\r\n              '@2x.png'\r\n            \"\r\n          />\r\n          {{ forecast.forecasts[0].weather[0].description }}\r\n        </div>\r\n\r\n        <h1>{{ forecast.forecasts[0].main.temp.toFixed(0) }}&deg;F</h1>\r\n        <p>\r\n          {{ forecast.forecasts[0].main.temp_max.toFixed(0) }}&deg;F/{{\r\n            forecast.forecasts[0].main.temp_min.toFixed(0)\r\n          }}&deg;F\r\n        </p>\r\n        <p>Min: {{ dataTrackerForcasts[i].showMin().toFixed(0) }}&deg;F</p>\r\n        <p>Max: {{ dataTrackerForcasts[i].showMax().toFixed(0) }}&deg;F</p>\r\n        <p>Mean: {{ dataTrackerForcasts[i].showMean().toFixed(0) }}&deg;F</p>\r\n        <p>Mode: {{ dataTrackerForcasts[i].showMode() }}</p>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n<footer fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  made by\r\n  <div class=\"name\">\r\n    <a href=\"https://www.aidenschrock.me\" target=\"_blank\">Aiden Schrock</a>\r\n  </div>\r\n  2021\r\n</footer>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ISingleDayForecast } from \"src/models/ISingleDayForecast\";\r\nimport { mode, mean, min, max, round } from \"mathjs\";\r\n\r\nexport class DataTracker {\r\n  private _min: number;\r\n  private _max: number;\r\n  private _mean: number;\r\n  private _mode: number;\r\n\r\n  constructor(forecast?: ISingleDayForecast) {\r\n    this.insert(forecast)\r\n  }\r\n\r\n  insert(value: ISingleDayForecast) {\r\n    this._min = min(value.forecasts.map(forecast => forecast.main.temp_min))\r\n    this._max = max(value.forecasts.map(forecast => forecast.main.temp_max))\r\n    this._mean = mean(value.forecasts.map(forecast => forecast.main.temp))\r\n    this._mode = mode(value.forecasts.map(forecast => round(forecast.main.temp)))\r\n  }\r\n\r\n  showMin() {\r\n    return this._min\r\n  }\r\n\r\n  showMax() {\r\n    return this._max\r\n  }\r\n\r\n  showMean() {\r\n    return this._mean\r\n  }\r\n\r\n  showMode() {\r\n    return this._mode\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}